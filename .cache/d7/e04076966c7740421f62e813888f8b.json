{"id":"../src/helpers/Utils.js","dependencies":[{"name":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/.babelrc","includedInParent":true,"mtime":1574079786644},{"name":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/package.json","includedInParent":true,"mtime":1610347691431},{"name":"turf-polygon","loc":{"line":1,"column":26},"parent":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/src/helpers/Utils.js","resolved":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/turf-polygon/index.js"},{"name":"ramda","loc":{"line":2,"column":30},"parent":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/src/helpers/Utils.js","resolved":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/ramda/dist/ramda.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toTurfPolygon = exports.latLngsToTuple = void 0;\n\nvar _turfPolygon = _interopRequireDefault(require(\"turf-polygon\"));\n\nvar _ramda = require(\"ramda\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/**\n * @method latLngsToTuple\n * @param {Array} latLngs\n * @return {Array}\n */\nvar latLngsToTuple = function latLngsToTuple(latLngs) {\n  return latLngs.map(function (model) {\n    return [model.lat, model.lng];\n  });\n}; // Transform a L.LatLng object into a GeoJSON polygon that TurfJS expects to receive.\n\n\nexports.latLngsToTuple = latLngsToTuple;\nvar toTurfPolygon = (0, _ramda.compose)(_turfPolygon.default, function (x) {\n  return [x];\n}, function (x) {\n  return [].concat(_toConsumableArray(x), [(0, _ramda.head)(x)]);\n}, latLngsToTuple);\nexports.toTurfPolygon = toTurfPolygon;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../src/helpers/Utils.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../src/helpers/Utils.js","original":{"line":2,"column":0}},{"generated":{"line":22,"column":0},"source":"../src/helpers/Utils.js","original":{"line":4,"column":0}},{"generated":{"line":27,"column":0},"source":"../src/helpers/Utils.js","original":{"line":9,"column":7}},{"name":"latLngsToTuple","generated":{"line":27,"column":4},"source":"../src/helpers/Utils.js","original":{"line":9,"column":13}},{"generated":{"line":27,"column":18},"source":"../src/helpers/Utils.js","original":{"line":9,"column":27}},{"generated":{"line":27,"column":21},"source":"../src/helpers/Utils.js","original":{"line":9,"column":30}},{"name":"latLngsToTuple","generated":{"line":27,"column":30},"source":"../src/helpers/Utils.js","original":{"line":9,"column":13}},{"generated":{"line":27,"column":44},"source":"../src/helpers/Utils.js","original":{"line":9,"column":30}},{"name":"latLngs","generated":{"line":27,"column":45},"source":"../src/helpers/Utils.js","original":{"line":9,"column":30}},{"generated":{"line":27,"column":52},"source":"../src/helpers/Utils.js","original":{"line":9,"column":37}},{"generated":{"line":27,"column":54},"source":"../src/helpers/Utils.js","original":{"line":9,"column":41}},{"generated":{"line":28,"column":0},"source":"../src/helpers/Utils.js","original":{"line":10,"column":2}},{"name":"latLngs","generated":{"line":28,"column":9},"source":"../src/helpers/Utils.js","original":{"line":10,"column":9}},{"generated":{"line":28,"column":16},"source":"../src/helpers/Utils.js","original":{"line":10,"column":16}},{"name":"map","generated":{"line":28,"column":17},"source":"../src/helpers/Utils.js","original":{"line":10,"column":17}},{"generated":{"line":28,"column":20},"source":"../src/helpers/Utils.js","original":{"line":10,"column":9}},{"generated":{"line":28,"column":21},"source":"../src/helpers/Utils.js","original":{"line":10,"column":21}},{"name":"model","generated":{"line":28,"column":31},"source":"../src/helpers/Utils.js","original":{"line":10,"column":21}},{"generated":{"line":28,"column":36},"source":"../src/helpers/Utils.js","original":{"line":10,"column":26}},{"generated":{"line":29,"column":0},"source":"../src/helpers/Utils.js","original":{"line":10,"column":26}},{"generated":{"line":29,"column":11},"source":"../src/helpers/Utils.js","original":{"line":10,"column":30}},{"name":"model","generated":{"line":29,"column":12},"source":"../src/helpers/Utils.js","original":{"line":10,"column":31}},{"generated":{"line":29,"column":17},"source":"../src/helpers/Utils.js","original":{"line":10,"column":36}},{"name":"lat","generated":{"line":29,"column":18},"source":"../src/helpers/Utils.js","original":{"line":10,"column":37}},{"generated":{"line":29,"column":21},"source":"../src/helpers/Utils.js","original":{"line":10,"column":30}},{"name":"model","generated":{"line":29,"column":23},"source":"../src/helpers/Utils.js","original":{"line":10,"column":42}},{"generated":{"line":29,"column":28},"source":"../src/helpers/Utils.js","original":{"line":10,"column":47}},{"name":"lng","generated":{"line":29,"column":29},"source":"../src/helpers/Utils.js","original":{"line":10,"column":48}},{"generated":{"line":29,"column":32},"source":"../src/helpers/Utils.js","original":{"line":10,"column":30}},{"generated":{"line":29,"column":33},"source":"../src/helpers/Utils.js","original":{"line":10,"column":26}},{"generated":{"line":30,"column":0},"source":"../src/helpers/Utils.js","original":{"line":10,"column":26}},{"generated":{"line":30,"column":3},"source":"../src/helpers/Utils.js","original":{"line":10,"column":9}},{"generated":{"line":30,"column":4},"source":"../src/helpers/Utils.js","original":{"line":10,"column":2}},{"generated":{"line":31,"column":0},"source":"../src/helpers/Utils.js","original":{"line":11,"column":1}},{"generated":{"line":31,"column":1},"source":"../src/helpers/Utils.js","original":{"line":9,"column":7}},{"generated":{"line":31,"column":3},"source":"../src/helpers/Utils.js","original":{"line":13,"column":0}},{"generated":{"line":35,"column":0},"source":"../src/helpers/Utils.js","original":{"line":14,"column":7}},{"name":"toTurfPolygon","generated":{"line":35,"column":4},"source":"../src/helpers/Utils.js","original":{"line":14,"column":13}},{"generated":{"line":35,"column":17},"source":"../src/helpers/Utils.js","original":{"line":14,"column":26}},{"generated":{"line":35,"column":20},"source":"../src/helpers/Utils.js","original":{"line":14,"column":29}},{"name":"createPolygon","generated":{"line":35,"column":40},"source":"../src/helpers/Utils.js","original":{"line":15,"column":2}},{"generated":{"line":35,"column":60},"source":"../src/helpers/Utils.js","original":{"line":14,"column":29}},{"generated":{"line":35,"column":62},"source":"../src/helpers/Utils.js","original":{"line":16,"column":2}},{"name":"x","generated":{"line":35,"column":72},"source":"../src/helpers/Utils.js","original":{"line":16,"column":2}},{"generated":{"line":35,"column":73},"source":"../src/helpers/Utils.js","original":{"line":16,"column":3}},{"generated":{"line":36,"column":0},"source":"../src/helpers/Utils.js","original":{"line":16,"column":3}},{"generated":{"line":36,"column":9},"source":"../src/helpers/Utils.js","original":{"line":16,"column":7}},{"name":"x","generated":{"line":36,"column":10},"source":"../src/helpers/Utils.js","original":{"line":16,"column":8}},{"generated":{"line":36,"column":11},"source":"../src/helpers/Utils.js","original":{"line":16,"column":7}},{"generated":{"line":36,"column":12},"source":"../src/helpers/Utils.js","original":{"line":16,"column":3}},{"generated":{"line":37,"column":0},"source":"../src/helpers/Utils.js","original":{"line":16,"column":3}},{"generated":{"line":37,"column":1},"source":"../src/helpers/Utils.js","original":{"line":14,"column":29}},{"generated":{"line":37,"column":3},"source":"../src/helpers/Utils.js","original":{"line":17,"column":2}},{"name":"x","generated":{"line":37,"column":13},"source":"../src/helpers/Utils.js","original":{"line":17,"column":2}},{"generated":{"line":37,"column":14},"source":"../src/helpers/Utils.js","original":{"line":17,"column":3}},{"generated":{"line":38,"column":0},"source":"../src/helpers/Utils.js","original":{"line":17,"column":3}},{"name":"x","generated":{"line":38,"column":38},"source":"../src/helpers/Utils.js","original":{"line":17,"column":11}},{"generated":{"line":38,"column":39},"source":"../src/helpers/Utils.js","original":{"line":17,"column":3}},{"generated":{"line":38,"column":43},"source":"../src/helpers/Utils.js","original":{"line":17,"column":14}},{"name":"x","generated":{"line":38,"column":60},"source":"../src/helpers/Utils.js","original":{"line":17,"column":19}},{"generated":{"line":38,"column":61},"source":"../src/helpers/Utils.js","original":{"line":17,"column":14}},{"generated":{"line":38,"column":62},"source":"../src/helpers/Utils.js","original":{"line":17,"column":3}},{"generated":{"line":39,"column":0},"source":"../src/helpers/Utils.js","original":{"line":17,"column":3}},{"generated":{"line":39,"column":1},"source":"../src/helpers/Utils.js","original":{"line":14,"column":29}},{"name":"latLngsToTuple","generated":{"line":39,"column":3},"source":"../src/helpers/Utils.js","original":{"line":18,"column":2}},{"generated":{"line":39,"column":17},"source":"../src/helpers/Utils.js","original":{"line":14,"column":29}},{"generated":{"line":39,"column":18},"source":"../src/helpers/Utils.js","original":{"line":14,"column":7}}],"sources":{"../src/helpers/Utils.js":"import createPolygon from \"turf-polygon\";\nimport { compose, head } from \"ramda\";\n\n/**\n * @method latLngsToTuple\n * @param {Array} latLngs\n * @return {Array}\n */\nexport const latLngsToTuple = latLngs => {\n  return latLngs.map(model => [model.lat, model.lng]);\n};\n\n// Transform a L.LatLng object into a GeoJSON polygon that TurfJS expects to receive.\nexport const toTurfPolygon = compose(\n  createPolygon,\n  x => [x],\n  x => [...x, head(x)],\n  latLngsToTuple\n);\n"},"lineCount":null}},"error":null,"hash":"d4e0d93f08992e1b65a12fc537c095c2","cacheData":{"env":{}}}