{"id":"abJG","dependencies":[{"name":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/package.json","includedInParent":true,"mtime":1610342287299},{"name":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/.babelrc","includedInParent":true,"mtime":1574079786644},{"name":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/d/package.json","includedInParent":true,"mtime":1577964995458},{"name":"type/value/is","loc":{"line":3,"column":34},"parent":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/d/auto-bind.js","resolved":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/type/value/is.js"},{"name":"type/value/ensure","loc":{"line":4,"column":34},"parent":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/d/auto-bind.js","resolved":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/type/value/ensure.js"},{"name":"type/plain-function/ensure","loc":{"line":5,"column":34},"parent":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/d/auto-bind.js","resolved":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/type/plain-function/ensure.js"},{"name":"es5-ext/object/copy","loc":{"line":6,"column":34},"parent":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/d/auto-bind.js","resolved":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/es5-ext/object/copy.js"},{"name":"es5-ext/object/normalize-options","loc":{"line":7,"column":34},"parent":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/d/auto-bind.js","resolved":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/es5-ext/object/normalize-options.js"},{"name":"es5-ext/object/map","loc":{"line":8,"column":34},"parent":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/d/auto-bind.js","resolved":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/es5-ext/object/map.js"}],"generated":{"js":"\n\"use strict\";\n\nvar isValue             = require(\"type/value/is\")\n  , ensureValue         = require(\"type/value/ensure\")\n  , ensurePlainFunction = require(\"type/plain-function/ensure\")\n  , copy                = require(\"es5-ext/object/copy\")\n  , normalizeOptions    = require(\"es5-ext/object/normalize-options\")\n  , map                 = require(\"es5-ext/object/map\");\n\nvar bind = Function.prototype.bind\n  , defineProperty = Object.defineProperty\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , define;\n\ndefine = function (name, desc, options) {\n\tvar value = ensureValue(desc) && ensurePlainFunction(desc.value), dgs;\n\tdgs = copy(desc);\n\tdelete dgs.writable;\n\tdelete dgs.value;\n\tdgs.get = function () {\n\t\tif (!options.overwriteDefinition && hasOwnProperty.call(this, name)) return value;\n\t\tdesc.value = bind.call(value, options.resolveContext ? options.resolveContext(this) : this);\n\t\tdefineProperty(this, name, desc);\n\t\treturn this[name];\n\t};\n\treturn dgs;\n};\n\nmodule.exports = function (props/*, options*/) {\n\tvar options = normalizeOptions(arguments[1]);\n\tif (isValue(options.resolveContext)) ensurePlainFunction(options.resolveContext);\n\treturn map(props, function (desc, name) { return define(name, desc, options); });\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/d/auto-bind.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/d/auto-bind.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}}],"sources":{"../node_modules/d/auto-bind.js":"\"use strict\";\n\nvar isValue             = require(\"type/value/is\")\n  , ensureValue         = require(\"type/value/ensure\")\n  , ensurePlainFunction = require(\"type/plain-function/ensure\")\n  , copy                = require(\"es5-ext/object/copy\")\n  , normalizeOptions    = require(\"es5-ext/object/normalize-options\")\n  , map                 = require(\"es5-ext/object/map\");\n\nvar bind = Function.prototype.bind\n  , defineProperty = Object.defineProperty\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , define;\n\ndefine = function (name, desc, options) {\n\tvar value = ensureValue(desc) && ensurePlainFunction(desc.value), dgs;\n\tdgs = copy(desc);\n\tdelete dgs.writable;\n\tdelete dgs.value;\n\tdgs.get = function () {\n\t\tif (!options.overwriteDefinition && hasOwnProperty.call(this, name)) return value;\n\t\tdesc.value = bind.call(value, options.resolveContext ? options.resolveContext(this) : this);\n\t\tdefineProperty(this, name, desc);\n\t\treturn this[name];\n\t};\n\treturn dgs;\n};\n\nmodule.exports = function (props/*, options*/) {\n\tvar options = normalizeOptions(arguments[1]);\n\tif (isValue(options.resolveContext)) ensurePlainFunction(options.resolveContext);\n\treturn map(props, function (desc, name) { return define(name, desc, options); });\n};\n"},"lineCount":35}},"error":null,"hash":"48fe1addf359296230d0b419b9d252fe","cacheData":{"env":{}}}