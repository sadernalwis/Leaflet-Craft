{"id":"BD54","dependencies":[{"name":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/package.json","includedInParent":true,"mtime":1610342287299},{"name":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/.babelrc","includedInParent":true,"mtime":1574079786644},{"name":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/@turf/clean-coords/node_modules/@turf/invariant/package.json","includedInParent":true,"mtime":1610342420039},{"name":"@turf/helpers","loc":{"line":3,"column":24},"parent":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","resolved":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/@turf/helpers/index.js"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = require(\"@turf/helpers\");\r\n/**\r\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\r\n *\r\n * @name getCoord\r\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\r\n * @returns {Array<number>} coordinates\r\n * @example\r\n * var pt = turf.point([10, 10]);\r\n *\r\n * var coord = turf.getCoord(pt);\r\n * //= [10, 10]\r\n */\r\nfunction getCoord(coord) {\r\n    if (!coord) {\r\n        throw new Error(\"coord is required\");\r\n    }\r\n    if (!Array.isArray(coord)) {\r\n        if (coord.type === \"Feature\" && coord.geometry !== null && coord.geometry.type === \"Point\") {\r\n            return coord.geometry.coordinates;\r\n        }\r\n        if (coord.type === \"Point\") {\r\n            return coord.coordinates;\r\n        }\r\n    }\r\n    if (Array.isArray(coord) && coord.length >= 2 && !Array.isArray(coord[0]) && !Array.isArray(coord[1])) {\r\n        return coord;\r\n    }\r\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\r\n}\r\nexports.getCoord = getCoord;\r\n/**\r\n * Unwrap coordinates from a Feature, Geometry Object or an Array\r\n *\r\n * @name getCoords\r\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\r\n * @returns {Array<any>} coordinates\r\n * @example\r\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\r\n *\r\n * var coords = turf.getCoords(poly);\r\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\r\n */\r\nfunction getCoords(coords) {\r\n    if (Array.isArray(coords)) {\r\n        return coords;\r\n    }\r\n    // Feature\r\n    if (coords.type === \"Feature\") {\r\n        if (coords.geometry !== null) {\r\n            return coords.geometry.coordinates;\r\n        }\r\n    }\r\n    else {\r\n        // Geometry\r\n        if (coords.coordinates) {\r\n            return coords.coordinates;\r\n        }\r\n    }\r\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\r\n}\r\nexports.getCoords = getCoords;\r\n/**\r\n * Checks if coordinates contains a number\r\n *\r\n * @name containsNumber\r\n * @param {Array<any>} coordinates GeoJSON Coordinates\r\n * @returns {boolean} true if Array contains a number\r\n */\r\nfunction containsNumber(coordinates) {\r\n    if (coordinates.length > 1 && helpers_1.isNumber(coordinates[0]) && helpers_1.isNumber(coordinates[1])) {\r\n        return true;\r\n    }\r\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\r\n        return containsNumber(coordinates[0]);\r\n    }\r\n    throw new Error(\"coordinates must only contain numbers\");\r\n}\r\nexports.containsNumber = containsNumber;\r\n/**\r\n * Enforce expectations about types of GeoJSON objects for Turf.\r\n *\r\n * @name geojsonType\r\n * @param {GeoJSON} value any GeoJSON object\r\n * @param {string} type expected GeoJSON type\r\n * @param {string} name name of calling function\r\n * @throws {Error} if value is not the expected type.\r\n */\r\nfunction geojsonType(value, type, name) {\r\n    if (!type || !name) {\r\n        throw new Error(\"type and name required\");\r\n    }\r\n    if (!value || value.type !== type) {\r\n        throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + value.type);\r\n    }\r\n}\r\nexports.geojsonType = geojsonType;\r\n/**\r\n * Enforce expectations about types of {@link Feature} inputs for Turf.\r\n * Internally this uses {@link geojsonType} to judge geometry types.\r\n *\r\n * @name featureOf\r\n * @param {Feature} feature a feature with an expected geometry type\r\n * @param {string} type expected GeoJSON type\r\n * @param {string} name name of calling function\r\n * @throws {Error} error if value is not the expected type.\r\n */\r\nfunction featureOf(feature, type, name) {\r\n    if (!feature) {\r\n        throw new Error(\"No feature passed\");\r\n    }\r\n    if (!name) {\r\n        throw new Error(\".featureOf() requires a name\");\r\n    }\r\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\r\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\r\n    }\r\n    if (!feature.geometry || feature.geometry.type !== type) {\r\n        throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type);\r\n    }\r\n}\r\nexports.featureOf = featureOf;\r\n/**\r\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\r\n * Internally this uses {@link geojsonType} to judge geometry types.\r\n *\r\n * @name collectionOf\r\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\r\n * @param {string} type expected GeoJSON type\r\n * @param {string} name name of calling function\r\n * @throws {Error} if value is not the expected type.\r\n */\r\nfunction collectionOf(featureCollection, type, name) {\r\n    if (!featureCollection) {\r\n        throw new Error(\"No featureCollection passed\");\r\n    }\r\n    if (!name) {\r\n        throw new Error(\".collectionOf() requires a name\");\r\n    }\r\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\r\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\r\n    }\r\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\r\n        var feature = _a[_i];\r\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\r\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\r\n        }\r\n        if (!feature.geometry || feature.geometry.type !== type) {\r\n            throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type);\r\n        }\r\n    }\r\n}\r\nexports.collectionOf = collectionOf;\r\n/**\r\n * Get Geometry from Feature or Geometry Object\r\n *\r\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\r\n * @returns {Geometry|null} GeoJSON Geometry Object\r\n * @throws {Error} if geojson is not a Feature or Geometry Object\r\n * @example\r\n * var point = {\r\n *   \"type\": \"Feature\",\r\n *   \"properties\": {},\r\n *   \"geometry\": {\r\n *     \"type\": \"Point\",\r\n *     \"coordinates\": [110, 40]\r\n *   }\r\n * }\r\n * var geom = turf.getGeom(point)\r\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\r\n */\r\nfunction getGeom(geojson) {\r\n    if (geojson.type === \"Feature\") {\r\n        return geojson.geometry;\r\n    }\r\n    return geojson;\r\n}\r\nexports.getGeom = getGeom;\r\n/**\r\n * Get GeoJSON object's type, Geometry type is prioritize.\r\n *\r\n * @param {GeoJSON} geojson GeoJSON object\r\n * @param {string} [name=\"geojson\"] name of the variable to display in error message\r\n * @returns {string} GeoJSON type\r\n * @example\r\n * var point = {\r\n *   \"type\": \"Feature\",\r\n *   \"properties\": {},\r\n *   \"geometry\": {\r\n *     \"type\": \"Point\",\r\n *     \"coordinates\": [110, 40]\r\n *   }\r\n * }\r\n * var geom = turf.getType(point)\r\n * //=\"Point\"\r\n */\r\nfunction getType(geojson, name) {\r\n    if (geojson.type === \"FeatureCollection\") {\r\n        return \"FeatureCollection\";\r\n    }\r\n    if (geojson.type === \"GeometryCollection\") {\r\n        return \"GeometryCollection\";\r\n    }\r\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\r\n        return geojson.geometry.type;\r\n    }\r\n    return geojson.type;\r\n}\r\nexports.getType = getType;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}}],"sources":{"../node_modules/@turf/clean-coords/node_modules/@turf/invariant/index.js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = require(\"@turf/helpers\");\r\n/**\r\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\r\n *\r\n * @name getCoord\r\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\r\n * @returns {Array<number>} coordinates\r\n * @example\r\n * var pt = turf.point([10, 10]);\r\n *\r\n * var coord = turf.getCoord(pt);\r\n * //= [10, 10]\r\n */\r\nfunction getCoord(coord) {\r\n    if (!coord) {\r\n        throw new Error(\"coord is required\");\r\n    }\r\n    if (!Array.isArray(coord)) {\r\n        if (coord.type === \"Feature\" && coord.geometry !== null && coord.geometry.type === \"Point\") {\r\n            return coord.geometry.coordinates;\r\n        }\r\n        if (coord.type === \"Point\") {\r\n            return coord.coordinates;\r\n        }\r\n    }\r\n    if (Array.isArray(coord) && coord.length >= 2 && !Array.isArray(coord[0]) && !Array.isArray(coord[1])) {\r\n        return coord;\r\n    }\r\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\r\n}\r\nexports.getCoord = getCoord;\r\n/**\r\n * Unwrap coordinates from a Feature, Geometry Object or an Array\r\n *\r\n * @name getCoords\r\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\r\n * @returns {Array<any>} coordinates\r\n * @example\r\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\r\n *\r\n * var coords = turf.getCoords(poly);\r\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\r\n */\r\nfunction getCoords(coords) {\r\n    if (Array.isArray(coords)) {\r\n        return coords;\r\n    }\r\n    // Feature\r\n    if (coords.type === \"Feature\") {\r\n        if (coords.geometry !== null) {\r\n            return coords.geometry.coordinates;\r\n        }\r\n    }\r\n    else {\r\n        // Geometry\r\n        if (coords.coordinates) {\r\n            return coords.coordinates;\r\n        }\r\n    }\r\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\r\n}\r\nexports.getCoords = getCoords;\r\n/**\r\n * Checks if coordinates contains a number\r\n *\r\n * @name containsNumber\r\n * @param {Array<any>} coordinates GeoJSON Coordinates\r\n * @returns {boolean} true if Array contains a number\r\n */\r\nfunction containsNumber(coordinates) {\r\n    if (coordinates.length > 1 && helpers_1.isNumber(coordinates[0]) && helpers_1.isNumber(coordinates[1])) {\r\n        return true;\r\n    }\r\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\r\n        return containsNumber(coordinates[0]);\r\n    }\r\n    throw new Error(\"coordinates must only contain numbers\");\r\n}\r\nexports.containsNumber = containsNumber;\r\n/**\r\n * Enforce expectations about types of GeoJSON objects for Turf.\r\n *\r\n * @name geojsonType\r\n * @param {GeoJSON} value any GeoJSON object\r\n * @param {string} type expected GeoJSON type\r\n * @param {string} name name of calling function\r\n * @throws {Error} if value is not the expected type.\r\n */\r\nfunction geojsonType(value, type, name) {\r\n    if (!type || !name) {\r\n        throw new Error(\"type and name required\");\r\n    }\r\n    if (!value || value.type !== type) {\r\n        throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + value.type);\r\n    }\r\n}\r\nexports.geojsonType = geojsonType;\r\n/**\r\n * Enforce expectations about types of {@link Feature} inputs for Turf.\r\n * Internally this uses {@link geojsonType} to judge geometry types.\r\n *\r\n * @name featureOf\r\n * @param {Feature} feature a feature with an expected geometry type\r\n * @param {string} type expected GeoJSON type\r\n * @param {string} name name of calling function\r\n * @throws {Error} error if value is not the expected type.\r\n */\r\nfunction featureOf(feature, type, name) {\r\n    if (!feature) {\r\n        throw new Error(\"No feature passed\");\r\n    }\r\n    if (!name) {\r\n        throw new Error(\".featureOf() requires a name\");\r\n    }\r\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\r\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\r\n    }\r\n    if (!feature.geometry || feature.geometry.type !== type) {\r\n        throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type);\r\n    }\r\n}\r\nexports.featureOf = featureOf;\r\n/**\r\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\r\n * Internally this uses {@link geojsonType} to judge geometry types.\r\n *\r\n * @name collectionOf\r\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\r\n * @param {string} type expected GeoJSON type\r\n * @param {string} name name of calling function\r\n * @throws {Error} if value is not the expected type.\r\n */\r\nfunction collectionOf(featureCollection, type, name) {\r\n    if (!featureCollection) {\r\n        throw new Error(\"No featureCollection passed\");\r\n    }\r\n    if (!name) {\r\n        throw new Error(\".collectionOf() requires a name\");\r\n    }\r\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\r\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\r\n    }\r\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\r\n        var feature = _a[_i];\r\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\r\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\r\n        }\r\n        if (!feature.geometry || feature.geometry.type !== type) {\r\n            throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type);\r\n        }\r\n    }\r\n}\r\nexports.collectionOf = collectionOf;\r\n/**\r\n * Get Geometry from Feature or Geometry Object\r\n *\r\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\r\n * @returns {Geometry|null} GeoJSON Geometry Object\r\n * @throws {Error} if geojson is not a Feature or Geometry Object\r\n * @example\r\n * var point = {\r\n *   \"type\": \"Feature\",\r\n *   \"properties\": {},\r\n *   \"geometry\": {\r\n *     \"type\": \"Point\",\r\n *     \"coordinates\": [110, 40]\r\n *   }\r\n * }\r\n * var geom = turf.getGeom(point)\r\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\r\n */\r\nfunction getGeom(geojson) {\r\n    if (geojson.type === \"Feature\") {\r\n        return geojson.geometry;\r\n    }\r\n    return geojson;\r\n}\r\nexports.getGeom = getGeom;\r\n/**\r\n * Get GeoJSON object's type, Geometry type is prioritize.\r\n *\r\n * @param {GeoJSON} geojson GeoJSON object\r\n * @param {string} [name=\"geojson\"] name of the variable to display in error message\r\n * @returns {string} GeoJSON type\r\n * @example\r\n * var point = {\r\n *   \"type\": \"Feature\",\r\n *   \"properties\": {},\r\n *   \"geometry\": {\r\n *     \"type\": \"Point\",\r\n *     \"coordinates\": [110, 40]\r\n *   }\r\n * }\r\n * var geom = turf.getType(point)\r\n * //=\"Point\"\r\n */\r\nfunction getType(geojson, name) {\r\n    if (geojson.type === \"FeatureCollection\") {\r\n        return \"FeatureCollection\";\r\n    }\r\n    if (geojson.type === \"GeometryCollection\") {\r\n        return \"GeometryCollection\";\r\n    }\r\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\r\n        return geojson.geometry.type;\r\n    }\r\n    return geojson.type;\r\n}\r\nexports.getType = getType;\r\n"},"lineCount":212}},"error":null,"hash":"ead7cd27e01e8232137bb3c147235137","cacheData":{"env":{}}}