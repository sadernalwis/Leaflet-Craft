{"id":"../node_modules/es6-symbol/polyfill.js","dependencies":[{"name":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/package.json","includedInParent":true,"mtime":1610344382770},{"name":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/.babelrc","includedInParent":true,"mtime":1574079786644},{"name":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/es6-symbol/package.json","includedInParent":true,"mtime":1577964995867},{"name":"d","loc":{"line":5,"column":35},"parent":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/es6-symbol/polyfill.js","resolved":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/d/index.js"},{"name":"./validate-symbol","loc":{"line":6,"column":35},"parent":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/es6-symbol/polyfill.js","resolved":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/es6-symbol/validate-symbol.js"},{"name":"ext/global-this","loc":{"line":7,"column":35},"parent":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/es6-symbol/polyfill.js","resolved":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/ext/global-this/index.js"},{"name":"./lib/private/generate-name","loc":{"line":8,"column":35},"parent":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/es6-symbol/polyfill.js","resolved":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/es6-symbol/lib/private/generate-name.js"},{"name":"./lib/private/setup/standard-symbols","loc":{"line":9,"column":35},"parent":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/es6-symbol/polyfill.js","resolved":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/es6-symbol/lib/private/setup/standard-symbols.js"},{"name":"./lib/private/setup/symbol-registry","loc":{"line":10,"column":35},"parent":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/es6-symbol/polyfill.js","resolved":"/Users/sagarpreet.chadha/Desktop/Leaflet-Craft/node_modules/es6-symbol/lib/private/setup/symbol-registry.js"}],"generated":{"js":"// ES2015 Symbol polyfill for environments that do not (or partially) support it\n\n\"use strict\";\n\nvar d                    = require(\"d\")\n  , validateSymbol       = require(\"./validate-symbol\")\n  , NativeSymbol         = require(\"ext/global-this\").Symbol\n  , generateName         = require(\"./lib/private/generate-name\")\n  , setupStandardSymbols = require(\"./lib/private/setup/standard-symbols\")\n  , setupSymbolRegistry  = require(\"./lib/private/setup/symbol-registry\");\n\nvar create = Object.create\n  , defineProperties = Object.defineProperties\n  , defineProperty = Object.defineProperty;\n\nvar SymbolPolyfill, HiddenSymbol, isNativeSafe;\n\nif (typeof NativeSymbol === \"function\") {\n\ttry {\n\t\tString(NativeSymbol());\n\t\tisNativeSafe = true;\n\t} catch (ignore) {}\n} else {\n\tNativeSymbol = null;\n}\n\n// Internal constructor (not one exposed) for creating Symbol instances.\n// This one is used to ensure that `someSymbol instanceof Symbol` always return false\nHiddenSymbol = function Symbol(description) {\n\tif (this instanceof HiddenSymbol) throw new TypeError(\"Symbol is not a constructor\");\n\treturn SymbolPolyfill(description);\n};\n\n// Exposed `Symbol` constructor\n// (returns instances of HiddenSymbol)\nmodule.exports = SymbolPolyfill = function Symbol(description) {\n\tvar symbol;\n\tif (this instanceof Symbol) throw new TypeError(\"Symbol is not a constructor\");\n\tif (isNativeSafe) return NativeSymbol(description);\n\tsymbol = create(HiddenSymbol.prototype);\n\tdescription = description === undefined ? \"\" : String(description);\n\treturn defineProperties(symbol, {\n\t\t__description__: d(\"\", description),\n\t\t__name__: d(\"\", generateName(description))\n\t});\n};\n\nsetupStandardSymbols(SymbolPolyfill);\nsetupSymbolRegistry(SymbolPolyfill);\n\n// Internal tweaks for real symbol producer\ndefineProperties(HiddenSymbol.prototype, {\n\tconstructor: d(SymbolPolyfill),\n\ttoString: d(\"\", function () { return this.__name__; })\n});\n\n// Proper implementation of methods exposed on Symbol.prototype\n// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\ndefineProperties(SymbolPolyfill.prototype, {\n\ttoString: d(function () { return \"Symbol (\" + validateSymbol(this).__description__ + \")\"; }),\n\tvalueOf: d(function () { return validateSymbol(this); })\n});\ndefineProperty(\n\tSymbolPolyfill.prototype,\n\tSymbolPolyfill.toPrimitive,\n\td(\"\", function () {\n\t\tvar symbol = validateSymbol(this);\n\t\tif (typeof symbol === \"symbol\") return symbol;\n\t\treturn symbol.toString();\n\t})\n);\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d(\"c\", \"Symbol\"));\n\n// Proper implementaton of toPrimitive and toStringTag for returned symbol instances\ndefineProperty(\n\tHiddenSymbol.prototype, SymbolPolyfill.toStringTag,\n\td(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toStringTag])\n);\n\n// Note: It's important to define `toPrimitive` as last one, as some implementations\n// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n// And that may invoke error in definition flow:\n// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\ndefineProperty(\n\tHiddenSymbol.prototype, SymbolPolyfill.toPrimitive,\n\td(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive])\n);\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/es6-symbol/polyfill.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}}],"sources":{"../node_modules/es6-symbol/polyfill.js":"// ES2015 Symbol polyfill for environments that do not (or partially) support it\n\n\"use strict\";\n\nvar d                    = require(\"d\")\n  , validateSymbol       = require(\"./validate-symbol\")\n  , NativeSymbol         = require(\"ext/global-this\").Symbol\n  , generateName         = require(\"./lib/private/generate-name\")\n  , setupStandardSymbols = require(\"./lib/private/setup/standard-symbols\")\n  , setupSymbolRegistry  = require(\"./lib/private/setup/symbol-registry\");\n\nvar create = Object.create\n  , defineProperties = Object.defineProperties\n  , defineProperty = Object.defineProperty;\n\nvar SymbolPolyfill, HiddenSymbol, isNativeSafe;\n\nif (typeof NativeSymbol === \"function\") {\n\ttry {\n\t\tString(NativeSymbol());\n\t\tisNativeSafe = true;\n\t} catch (ignore) {}\n} else {\n\tNativeSymbol = null;\n}\n\n// Internal constructor (not one exposed) for creating Symbol instances.\n// This one is used to ensure that `someSymbol instanceof Symbol` always return false\nHiddenSymbol = function Symbol(description) {\n\tif (this instanceof HiddenSymbol) throw new TypeError(\"Symbol is not a constructor\");\n\treturn SymbolPolyfill(description);\n};\n\n// Exposed `Symbol` constructor\n// (returns instances of HiddenSymbol)\nmodule.exports = SymbolPolyfill = function Symbol(description) {\n\tvar symbol;\n\tif (this instanceof Symbol) throw new TypeError(\"Symbol is not a constructor\");\n\tif (isNativeSafe) return NativeSymbol(description);\n\tsymbol = create(HiddenSymbol.prototype);\n\tdescription = description === undefined ? \"\" : String(description);\n\treturn defineProperties(symbol, {\n\t\t__description__: d(\"\", description),\n\t\t__name__: d(\"\", generateName(description))\n\t});\n};\n\nsetupStandardSymbols(SymbolPolyfill);\nsetupSymbolRegistry(SymbolPolyfill);\n\n// Internal tweaks for real symbol producer\ndefineProperties(HiddenSymbol.prototype, {\n\tconstructor: d(SymbolPolyfill),\n\ttoString: d(\"\", function () { return this.__name__; })\n});\n\n// Proper implementation of methods exposed on Symbol.prototype\n// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\ndefineProperties(SymbolPolyfill.prototype, {\n\ttoString: d(function () { return \"Symbol (\" + validateSymbol(this).__description__ + \")\"; }),\n\tvalueOf: d(function () { return validateSymbol(this); })\n});\ndefineProperty(\n\tSymbolPolyfill.prototype,\n\tSymbolPolyfill.toPrimitive,\n\td(\"\", function () {\n\t\tvar symbol = validateSymbol(this);\n\t\tif (typeof symbol === \"symbol\") return symbol;\n\t\treturn symbol.toString();\n\t})\n);\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d(\"c\", \"Symbol\"));\n\n// Proper implementaton of toPrimitive and toStringTag for returned symbol instances\ndefineProperty(\n\tHiddenSymbol.prototype, SymbolPolyfill.toStringTag,\n\td(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toStringTag])\n);\n\n// Note: It's important to define `toPrimitive` as last one, as some implementations\n// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n// And that may invoke error in definition flow:\n// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\ndefineProperty(\n\tHiddenSymbol.prototype, SymbolPolyfill.toPrimitive,\n\td(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive])\n);\n"},"lineCount":88}},"error":null,"hash":"b7dee98a744dcfeb9ceb22a5b032a566","cacheData":{"env":{}}}